<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="953af79d-82dd-4895-bb56-0289ca966e36" name="xulei@XULEI-PC 2012-05-18 11:12:26" runUser="xulei-PC\xulei" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本地" id="1ff404fe-f118-486d-b728-2179d9e1be88">
    <Description>这些设置为本地测试运行的默认测试设置。</Description>
    <Deployment enabled="false" runDeploymentRoot="xulei_XULEI-PC 2012-05-18 11_12_26">
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\DAL\bin\Debug\DAL.dll" />
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\Castle.Core.dll" />
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\castle.dynamicproxy2.dll" />
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\NHibernate.dll" />
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\NHibernate.ByteCode.Castle.dll" />
      <DeploymentItem filename="C:\Users\xulei\Desktop\TicketBookWebSite\Iesi.Collections.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-05-18T11:12:26.7982397+08:00" queuing="2012-05-18T11:12:26.8112404+08:00" start="2012-05-18T11:12:26.8212410+08:00" finish="2012-05-18T11:12:28.3103262+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="getTicketByIDTest" storage="c:\users\xulei\desktop\ticketbookwebsite\ticketbooktest\bin\debug\ticketbooktest.dll" id="18ae8939-e637-6c1f-550f-fa6650834d96">
      <Execution id="3e45eb4a-b7e8-451c-9384-cf1985d8bb07" />
      <TestMethod codeBase="C:/Users/xulei/Desktop/TicketBookWebSite/ticketBookTest/bin/Debug/ticketBookTest.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ticketBookTest.ticketSessionTest, ticketBookTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="getTicketByIDTest" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="列表中未列出的结果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有已加载的结果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="18ae8939-e637-6c1f-550f-fa6650834d96" executionId="3e45eb4a-b7e8-451c-9384-cf1985d8bb07" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="3e45eb4a-b7e8-451c-9384-cf1985d8bb07" testId="18ae8939-e637-6c1f-550f-fa6650834d96" testName="getTicketByIDTest" computerName="XULEI-PC" duration="00:00:01.1870473" startTime="2012-05-18T11:12:26.8292415+08:00" endTime="2012-05-18T11:12:28.2393221+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3e45eb4a-b7e8-451c-9384-cf1985d8bb07">
      <Output>
        <ErrorInfo>
          <Message>测试方法 ticketBookTest.ticketSessionTest.getTicketByIDTest 引发了异常: 
NHibernate.Exceptions.GenericADOException: could not load an entity: [DAL.ticket#zhazhu001][SQL: SELECT ticket0_.ID as ID1_0_, ticket0_.startPos as startPos1_0_, ticket0_.endPos as endPos1_0_, ticket0_.ticketMoney as ticketMo4_1_0_, ticket0_.totalsit as totalsit1_0_, ticket0_.remainsit as remainsit1_0_, ticket0_.DATE as DATE1_0_, ticket0_.time as time1_0_ FROM ticketinfo ticket0_ WHERE ticket0_.ID=?] ---&gt; MySql.Data.MySqlClient.MySqlException: Unknown column 'ticket0_.DATE' in 'field list'</Message>
          <StackTrace>    在 MySql.Data.MySqlClient.MySqlStream.ReadPacket()
   在 MySql.Data.MySqlClient.NativeDriver.GetResult(Int32&amp; affectedRow, Int32&amp; insertedId)
   在 MySql.Data.MySqlClient.Driver.GetResult(Int32 statementId, Int32&amp; affectedRows, Int32&amp; insertedId)
   在 MySql.Data.MySqlClient.Driver.NextResult(Int32 statementId, Boolean force)
   在 MySql.Data.MySqlClient.MySqlDataReader.NextResult()
   在 MySql.Data.MySqlClient.MySqlCommand.ExecuteReader(CommandBehavior behavior)
   在 MySql.Data.MySqlClient.MySqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   在 System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   在 NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   在 NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)
   在 NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)
   在 NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)
   在 NHibernate.Loader.Loader.LoadEntity(ISessionImplementor session, Object id, IType identifierType, Object optionalObject, String optionalEntityName, Object optionalIdentifier, IEntityPersister persister)
 --- 内部异常堆栈跟踪的末尾 ---
    在 NHibernate.Loader.Loader.LoadEntity(ISessionImplementor session, Object id, IType identifierType, Object optionalObject, String optionalEntityName, Object optionalIdentifier, IEntityPersister persister)
   在 NHibernate.Loader.Entity.AbstractEntityLoader.Load(ISessionImplementor session, Object id, Object optionalObject, Object optionalId)
   在 NHibernate.Loader.Entity.AbstractEntityLoader.Load(Object id, Object optionalObject, ISessionImplementor session)
   在 NHibernate.Persister.Entity.AbstractEntityPersister.Load(Object id, Object optionalObject, LockMode lockMode, ISessionImplementor session)
   在 NHibernate.Event.Default.DefaultLoadEventListener.LoadFromDatasource(LoadEvent event, IEntityPersister persister, EntityKey keyToLoad, LoadType options)
   在 NHibernate.Event.Default.DefaultLoadEventListener.DoLoad(LoadEvent event, IEntityPersister persister, EntityKey keyToLoad, LoadType options)
   在 NHibernate.Event.Default.DefaultLoadEventListener.Load(LoadEvent event, IEntityPersister persister, EntityKey keyToLoad, LoadType options)
   在 NHibernate.Event.Default.DefaultLoadEventListener.ProxyOrLoad(LoadEvent event, IEntityPersister persister, EntityKey keyToLoad, LoadType options)
   在 NHibernate.Event.Default.DefaultLoadEventListener.OnLoad(LoadEvent event, LoadType loadType)
   在 NHibernate.Impl.SessionImpl.FireLoad(LoadEvent event, LoadType loadType)
   在 NHibernate.Impl.SessionImpl.Get(String entityName, Object id)
   在 NHibernate.Impl.SessionImpl.Get(Type entityClass, Object id)
   在 NHibernate.Impl.SessionImpl.Get[T](Object id)
   在 DAL.Handle.ticketSession.getTicketByID(String id) 位置 C:\Users\xulei\Desktop\TicketBookWebSite\DAL\Handle\ticketSession.cs:行号 23
   在 ticketBookTest.ticketSessionTest.getTicketByIDTest() 位置 C:\Users\xulei\Desktop\TicketBookWebSite\ticketBookTest\ticketSessionTest.cs:行号 77
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>